{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"C:/Users/KIIT/portfolio/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringifyTheme = stringifyTheme;\nvar _deepmerge = require(\"@mui/utils/deepmerge\");\n/* eslint-disable import/prefer-default-export */\n\nfunction isSerializable(val) {\n  return (0, _deepmerge.isPlainObject)(val) || typeof val === 'undefined' || typeof val === 'string' || typeof val === 'boolean' || typeof val === 'number' || Array.isArray(val);\n}\n\n/**\n * `baseTheme` usually comes from `createTheme()` or `extendTheme()`.\n *\n * This function is intended to be used with zero-runtime CSS-in-JS like Pigment CSS\n * For example, in a Next.js project:\n *\n * ```js\n * // next.config.js\n * const { extendTheme } = require('@mui/material/styles');\n *\n * const theme = extendTheme();\n * // `.toRuntimeSource` is Pigment CSS specific to create a theme that is available at runtime.\n * theme.toRuntimeSource = stringifyTheme;\n *\n * module.exports = withPigment({\n *  theme,\n * });\n * ```\n */\nfunction stringifyTheme() {\n  let baseTheme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const serializableTheme = _objectSpread({}, baseTheme);\n  function serializeTheme(object) {\n    const array = Object.entries(object);\n    // eslint-disable-next-line no-plusplus\n    for (let index = 0; index < array.length; index++) {\n      const [key, value] = array[index];\n      if (!isSerializable(value) || key.startsWith('unstable_')) {\n        delete object[key];\n      } else if ((0, _deepmerge.isPlainObject)(value)) {\n        object[key] = _objectSpread({}, value);\n        serializeTheme(object[key]);\n      }\n    }\n  }\n  serializeTheme(serializableTheme);\n  return \"import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';\\n\\nconst theme = \".concat(JSON.stringify(serializableTheme, null, 2), \";\\n\\ntheme.breakpoints = createBreakpoints(theme.breakpoints || {});\\ntheme.transitions = createTransitions(theme.transitions || {});\\n\\nexport default theme;\");\n}","map":{"version":3,"names":["_objectSpread","require","default","Object","defineProperty","exports","value","stringifyTheme","_deepmerge","isSerializable","val","isPlainObject","Array","isArray","baseTheme","arguments","length","undefined","serializableTheme","serializeTheme","object","array","entries","index","key","startsWith","concat","JSON","stringify"],"sources":["C:/Users/KIIT/portfolio/node_modules/@mui/material/styles/stringifyTheme.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringifyTheme = stringifyTheme;\nvar _deepmerge = require(\"@mui/utils/deepmerge\");\n/* eslint-disable import/prefer-default-export */\n\nfunction isSerializable(val) {\n  return (0, _deepmerge.isPlainObject)(val) || typeof val === 'undefined' || typeof val === 'string' || typeof val === 'boolean' || typeof val === 'number' || Array.isArray(val);\n}\n\n/**\n * `baseTheme` usually comes from `createTheme()` or `extendTheme()`.\n *\n * This function is intended to be used with zero-runtime CSS-in-JS like Pigment CSS\n * For example, in a Next.js project:\n *\n * ```js\n * // next.config.js\n * const { extendTheme } = require('@mui/material/styles');\n *\n * const theme = extendTheme();\n * // `.toRuntimeSource` is Pigment CSS specific to create a theme that is available at runtime.\n * theme.toRuntimeSource = stringifyTheme;\n *\n * module.exports = withPigment({\n *  theme,\n * });\n * ```\n */\nfunction stringifyTheme(baseTheme = {}) {\n  const serializableTheme = {\n    ...baseTheme\n  };\n  function serializeTheme(object) {\n    const array = Object.entries(object);\n    // eslint-disable-next-line no-plusplus\n    for (let index = 0; index < array.length; index++) {\n      const [key, value] = array[index];\n      if (!isSerializable(value) || key.startsWith('unstable_')) {\n        delete object[key];\n      } else if ((0, _deepmerge.isPlainObject)(value)) {\n        object[key] = {\n          ...value\n        };\n        serializeTheme(object[key]);\n      }\n    }\n  }\n  serializeTheme(serializableTheme);\n  return `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';\n\nconst theme = ${JSON.stringify(serializableTheme, null, 2)};\n\ntheme.breakpoints = createBreakpoints(theme.breakpoints || {});\ntheme.transitions = createTransitions(theme.transitions || {});\n\nexport default theme;`;\n}"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,aAAA,GAAAC,OAAA,iFAAAC,OAAA;AAEbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,cAAc,GAAGA,cAAc;AACvC,IAAIC,UAAU,GAAGP,OAAO,CAAC,sBAAsB,CAAC;AAChD;;AAEA,SAASQ,cAAcA,CAACC,GAAG,EAAE;EAC3B,OAAO,CAAC,CAAC,EAAEF,UAAU,CAACG,aAAa,EAAED,GAAG,CAAC,IAAI,OAAOA,GAAG,KAAK,WAAW,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,OAAOA,GAAG,KAAK,SAAS,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIE,KAAK,CAACC,OAAO,CAACH,GAAG,CAAC;AACjL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASH,cAAcA,CAAA,EAAiB;EAAA,IAAhBO,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACpC,MAAMG,iBAAiB,GAAAlB,aAAA,KAClBc,SAAS,CACb;EACD,SAASK,cAAcA,CAACC,MAAM,EAAE;IAC9B,MAAMC,KAAK,GAAGlB,MAAM,CAACmB,OAAO,CAACF,MAAM,CAAC;IACpC;IACA,KAAK,IAAIG,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGF,KAAK,CAACL,MAAM,EAAEO,KAAK,EAAE,EAAE;MACjD,MAAM,CAACC,GAAG,EAAElB,KAAK,CAAC,GAAGe,KAAK,CAACE,KAAK,CAAC;MACjC,IAAI,CAACd,cAAc,CAACH,KAAK,CAAC,IAAIkB,GAAG,CAACC,UAAU,CAAC,WAAW,CAAC,EAAE;QACzD,OAAOL,MAAM,CAACI,GAAG,CAAC;MACpB,CAAC,MAAM,IAAI,CAAC,CAAC,EAAEhB,UAAU,CAACG,aAAa,EAAEL,KAAK,CAAC,EAAE;QAC/Cc,MAAM,CAACI,GAAG,CAAC,GAAAxB,aAAA,KACNM,KAAK,CACT;QACDa,cAAc,CAACC,MAAM,CAACI,GAAG,CAAC,CAAC;MAC7B;IACF;EACF;EACAL,cAAc,CAACD,iBAAiB,CAAC;EACjC,sIAAAQ,MAAA,CAEcC,IAAI,CAACC,SAAS,CAACV,iBAAiB,EAAE,IAAI,EAAE,CAAC,CAAC;AAM1D","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}