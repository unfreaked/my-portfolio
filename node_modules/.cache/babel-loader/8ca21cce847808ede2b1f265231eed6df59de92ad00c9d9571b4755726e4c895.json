{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\portfolio\\\\src\\\\pages\\\\Projects.js\";\nimport React from 'react';\nimport { Box, Container, Typography, Grid, Card, CardContent, CardMedia, CardActions, Button, Chip } from '@mui/material';\nimport { motion } from 'framer-motion';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  title: 'Travel Itinerary Planner',\n  description: \"Developed an AI-powered travel planner using LangChain and Groq's LLM API to generate personalized day trip itineraries. Designed interactive Gradio interface with dynamic backgrounds and responsive UI. Implemented prompt engineering for detailed itineraries with time blocks, locations, and travel tips and deployed the application with proper state management for seamless user experience.\",\n  technologies: ['Python', 'LangChain', 'Groq', 'Gradio', 'NLP'],\n  github: 'https://github.com/yourusername/travel-itinerary-planner',\n  image: '/travel-itinerary-planner.png'\n}, {\n  title: 'Resume Parser AI',\n  description: 'Built NLP pipeline to extract structured data from resumes using PyPDF2 and Tesseract. Deployed using FastAPI with 85% accuracy on test dataset.',\n  technologies: ['Python', 'spaCy', 'PyMuPDF', 'NLP', 'Tesseract'],\n  github: 'https://github.com/yourusername/resume-parser-ai',\n  image: '/Resume-Parser-AI.png'\n}, {\n  title: 'Dynamic E-Commerce Website',\n  description: 'Built and deployed a full-featured e-commerce platform with user login, shopping cart, and admin dashboard. Developed REST APIs with Node.js/Express and used MongoDB Atlas for data persistence.',\n  technologies: ['Node.js', 'React.js', 'MongoDB', 'JavaScript', 'CSS', 'HTML'],\n  github: 'https://github.com/yourusername/dynamic-ecommerce-website',\n  image: '/Dynamic E-Commerce-Website.png'\n}, {\n  title: 'Water Quality Analysis',\n  description: 'Achieved 0.69 precision using ensemble Voting Classifier (XGBoost + Random Forest). Performed EDA, data cleaning, feature selection, and hyperparameter tuning.',\n  technologies: ['Python', 'Scikit-Learn', 'XGBoost'],\n  github: 'https://github.com/yourusername/water-quality-analysis',\n  image: '/Water-Quality-Analysis.png'\n}, {\n  title: 'SMS Spam Detection',\n  description: 'Built spam classifier with 95.16% accuracy and 100% precision using Random Forest and NN. Implemented NLP pipeline with TF-IDF, tokenization, and stopword removal.',\n  technologies: ['Python', 'NLP', 'Random Forest', 'Neural Networks'],\n  github: 'https://github.com/yourusername/sms-spam-detection',\n  image: '/SMS-Spam-Detection.png'\n}];\nconst Projects = () => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      py: 8\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          duration: 0.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h1\",\n          gutterBottom: true,\n          align: \"center\",\n          children: \"My Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          paragraph: true,\n          align: \"center\",\n          sx: {\n            maxWidth: 800,\n            mx: 'auto',\n            mb: 6\n          },\n          children: \"Here are some of the projects I've worked on. Each project is a unique challenge that helped me grow as a developer.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 4,\n          children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              component: motion.div,\n              whileHover: {\n                y: -10\n              },\n              sx: {\n                height: '100%',\n                display: 'flex',\n                flexDirection: 'column'\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                component: \"img\",\n                height: \"200\",\n                image: project.image,\n                alt: project.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                sx: {\n                  flexGrow: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  gutterBottom: true,\n                  variant: \"h5\",\n                  component: \"h2\",\n                  children: project.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  paragraph: true,\n                  color: \"text.secondary\",\n                  children: project.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mb: 2\n                  },\n                  children: project.technologies.map(tech => /*#__PURE__*/_jsxDEV(Chip, {\n                    label: tech,\n                    size: \"small\",\n                    sx: {\n                      mr: 1,\n                      mb: 1\n                    }\n                  }, tech, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  startIcon: /*#__PURE__*/_jsxDEV(GitHubIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 34\n                  }, this),\n                  href: project.github,\n                  target: \"_blank\",\n                  children: \"Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","Box","Container","Typography","Grid","Card","CardContent","CardMedia","CardActions","Button","Chip","motion","GitHubIcon","LaunchIcon","jsxDEV","_jsxDEV","projects","title","description","technologies","github","image","Projects","sx","py","children","maxWidth","div","initial","opacity","y","animate","transition","duration","variant","component","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","paragraph","mx","mb","container","spacing","map","project","index","item","xs","md","lg","whileHover","height","display","flexDirection","alt","flexGrow","color","tech","label","size","mr","startIcon","href","target","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/portfolio/src/pages/Projects.js"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  CardActions,\n  Button,\n  Chip,\n} from '@mui/material';\nimport { motion } from 'framer-motion';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport LaunchIcon from '@mui/icons-material/Launch';\n\nconst projects = [\n  {\n    title: 'Travel Itinerary Planner',\n    description:\n      \"Developed an AI-powered travel planner using LangChain and Groq's LLM API to generate personalized day trip itineraries. Designed interactive Gradio interface with dynamic backgrounds and responsive UI. Implemented prompt engineering for detailed itineraries with time blocks, locations, and travel tips and deployed the application with proper state management for seamless user experience.\",\n    technologies: ['Python', 'LangChain', 'Groq', 'Gradio', 'NLP'],\n    github: 'https://github.com/yourusername/travel-itinerary-planner',\n    image: '/travel-itinerary-planner.png',\n  },\n  {\n    title: 'Resume Parser AI',\n    description:\n      'Built NLP pipeline to extract structured data from resumes using PyPDF2 and Tesseract. Deployed using FastAPI with 85% accuracy on test dataset.',\n    technologies: ['Python', 'spaCy', 'PyMuPDF', 'NLP', 'Tesseract'],\n    github: 'https://github.com/yourusername/resume-parser-ai',\n    image: '/Resume-Parser-AI.png',\n  },\n  {\n    title: 'Dynamic E-Commerce Website',\n    description:\n      'Built and deployed a full-featured e-commerce platform with user login, shopping cart, and admin dashboard. Developed REST APIs with Node.js/Express and used MongoDB Atlas for data persistence.',\n    technologies: ['Node.js', 'React.js', 'MongoDB', 'JavaScript', 'CSS', 'HTML'],\n    github: 'https://github.com/yourusername/dynamic-ecommerce-website',\n    image: '/Dynamic E-Commerce-Website.png',\n  },\n  {\n    title: 'Water Quality Analysis',\n    description:\n      'Achieved 0.69 precision using ensemble Voting Classifier (XGBoost + Random Forest). Performed EDA, data cleaning, feature selection, and hyperparameter tuning.',\n    technologies: ['Python', 'Scikit-Learn', 'XGBoost'],\n    github: 'https://github.com/yourusername/water-quality-analysis',\n    image: '/Water-Quality-Analysis.png',\n  },\n  {\n    title: 'SMS Spam Detection',\n    description:\n      'Built spam classifier with 95.16% accuracy and 100% precision using Random Forest and NN. Implemented NLP pipeline with TF-IDF, tokenization, and stopword removal.',\n    technologies: ['Python', 'NLP', 'Random Forest', 'Neural Networks'],\n    github: 'https://github.com/yourusername/sms-spam-detection',\n    image: '/SMS-Spam-Detection.png',\n  },\n];\n\nconst Projects = () => {\n  return (\n    <Box sx={{ py: 8 }}>\n      <Container maxWidth=\"lg\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n        >\n          <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\">\n            My Projects\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            paragraph\n            align=\"center\"\n            sx={{ maxWidth: 800, mx: 'auto', mb: 6 }}\n          >\n            Here are some of the projects I've worked on. Each project is a\n            unique challenge that helped me grow as a developer.\n          </Typography>\n\n          <Grid container spacing={4}>\n            {projects.map((project, index) => (\n              <Grid item xs={12} md={6} lg={4} key={index}>\n                <Card\n                  component={motion.div}\n                  whileHover={{ y: -10 }}\n                  sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n                >\n                  <CardMedia\n                    component=\"img\"\n                    height=\"200\"\n                    image={project.image}\n                    alt={project.title}\n                  />\n                  <CardContent sx={{ flexGrow: 1 }}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {project.title}\n                    </Typography>\n                    <Typography paragraph color=\"text.secondary\">\n                      {project.description}\n                    </Typography>\n                    <Box sx={{ mb: 2 }}>\n                      {project.technologies.map((tech) => (\n                        <Chip\n                          key={tech}\n                          label={tech}\n                          size=\"small\"\n                          sx={{ mr: 1, mb: 1 }}\n                        />\n                      ))}\n                    </Box>\n                  </CardContent>\n                  <CardActions>\n                    <Button\n                      size=\"small\"\n                      startIcon={<GitHubIcon />}\n                      href={project.github}\n                      target=\"_blank\"\n                    >\n                      Code\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </motion.div>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Projects; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}