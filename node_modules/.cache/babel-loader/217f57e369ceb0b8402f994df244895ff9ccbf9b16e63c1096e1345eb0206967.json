{"ast":null,"code":"import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { clickRadius, defaultFps, defaultFpsLimit, errorPrefix, millisecondsToSeconds, minCoordinate, minFpsLimit, removeDeleteCount, removeMinIndex, touchEndLengthOffset } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n  return container && !container.destroyed;\n}\nfunction initDelta(value) {\n  let fpsLimit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultFps;\n  let smooth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    value,\n    factor: smooth ? defaultFps / fpsLimit : defaultFps * value / millisecondsToSeconds\n  };\n}\nfunction loadContainerOptions(engine, container) {\n  const options = new Options(engine, container);\n  for (var _len = arguments.length, sourceOptionsArr = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    sourceOptionsArr[_key - 2] = arguments[_key];\n  }\n  loadOptions(options, ...sourceOptionsArr);\n  return options;\n}\nexport class Container {\n  constructor(engine, id, sourceOptions) {\n    this._intersectionManager = entries => {\n      if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n        return;\n      }\n      for (const entry of entries) {\n        if (entry.target !== this.interactivity.element) {\n          continue;\n        }\n        if (entry.isIntersecting) {\n          void this.play();\n        } else {\n          this.pause();\n        }\n      }\n    };\n    this._nextFrame = timestamp => {\n      try {\n        var _this$_lastFrameTime;\n        if (!this._smooth && this._lastFrameTime !== undefined && timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n          this.draw(false);\n          return;\n        }\n        (_this$_lastFrameTime = this._lastFrameTime) !== null && _this$_lastFrameTime !== void 0 ? _this$_lastFrameTime : this._lastFrameTime = timestamp;\n        const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n        this.addLifeTime(delta.value);\n        this._lastFrameTime = timestamp;\n        if (delta.value > millisecondsToSeconds) {\n          this.draw(false);\n          return;\n        }\n        this.particles.draw(delta);\n        if (!this.alive()) {\n          this.destroy();\n          return;\n        }\n        if (this.animationStatus) {\n          this.draw(false);\n        }\n      } catch (e) {\n        getLogger().error(\"\".concat(errorPrefix, \" in animation loop\"), e);\n      }\n    };\n    this._engine = engine;\n    this.id = Symbol(id);\n    this.fpsLimit = 120;\n    this._smooth = false;\n    this._delay = 0;\n    this._duration = 0;\n    this._lifeTime = 0;\n    this._firstStart = true;\n    this.started = false;\n    this.destroyed = false;\n    this._paused = true;\n    this._lastFrameTime = 0;\n    this.zLayers = 100;\n    this.pageHidden = false;\n    this._clickHandlers = new Map();\n    this._sourceOptions = sourceOptions;\n    this._initialSourceOptions = sourceOptions;\n    this.retina = new Retina(this);\n    this.canvas = new Canvas(this, this._engine);\n    this.particles = new Particles(this._engine, this);\n    this.pathGenerators = new Map();\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.plugins = new Map();\n    this.effectDrawers = new Map();\n    this.shapeDrawers = new Map();\n    this._options = loadContainerOptions(this._engine, this);\n    this.actualOptions = loadContainerOptions(this._engine, this);\n    this._eventListeners = new EventListeners(this);\n    this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n    this._engine.dispatchEvent(EventType.containerBuilt, {\n      container: this\n    });\n  }\n  get animationStatus() {\n    return !this._paused && !this.pageHidden && guardCheck(this);\n  }\n  get options() {\n    return this._options;\n  }\n  get sourceOptions() {\n    return this._sourceOptions;\n  }\n  addClickHandler(callback) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const el = this.interactivity.element;\n    if (!el) {\n      return;\n    }\n    const clickOrTouchHandler = (e, pos, radius) => {\n        if (!guardCheck(this)) {\n          return;\n        }\n        const pxRatio = this.retina.pixelRatio,\n          posRetina = {\n            x: pos.x * pxRatio,\n            y: pos.y * pxRatio\n          },\n          particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n        callback(e, particles);\n      },\n      clickHandler = e => {\n        if (!guardCheck(this)) {\n          return;\n        }\n        const mouseEvent = e,\n          pos = {\n            x: mouseEvent.offsetX || mouseEvent.clientX,\n            y: mouseEvent.offsetY || mouseEvent.clientY\n          };\n        clickOrTouchHandler(e, pos, clickRadius);\n      },\n      touchStartHandler = () => {\n        if (!guardCheck(this)) {\n          return;\n        }\n        touched = true;\n        touchMoved = false;\n      },\n      touchMoveHandler = () => {\n        if (!guardCheck(this)) {\n          return;\n        }\n        touchMoved = true;\n      },\n      touchEndHandler = e => {\n        if (!guardCheck(this)) {\n          return;\n        }\n        if (touched && !touchMoved) {\n          const touchEvent = e;\n          let lastTouch = touchEvent.touches[touchEvent.touches.length - touchEndLengthOffset];\n          if (!lastTouch) {\n            lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - touchEndLengthOffset];\n            if (!lastTouch) {\n              return;\n            }\n          }\n          const element = this.canvas.element,\n            canvasRect = element ? element.getBoundingClientRect() : undefined,\n            pos = {\n              x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n              y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate)\n            };\n          clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n        }\n        touched = false;\n        touchMoved = false;\n      },\n      touchCancelHandler = () => {\n        if (!guardCheck(this)) {\n          return;\n        }\n        touched = false;\n        touchMoved = false;\n      };\n    let touched = false,\n      touchMoved = false;\n    this._clickHandlers.set(\"click\", clickHandler);\n    this._clickHandlers.set(\"touchstart\", touchStartHandler);\n    this._clickHandlers.set(\"touchmove\", touchMoveHandler);\n    this._clickHandlers.set(\"touchend\", touchEndHandler);\n    this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\n    for (const [key, handler] of this._clickHandlers) {\n      el.addEventListener(key, handler);\n    }\n  }\n  addLifeTime(value) {\n    this._lifeTime += value;\n  }\n  addPath(key, generator) {\n    let override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (!guardCheck(this) || !override && this.pathGenerators.has(key)) {\n      return false;\n    }\n    this.pathGenerators.set(key, generator);\n    return true;\n  }\n  alive() {\n    return !this._duration || this._lifeTime <= this._duration;\n  }\n  clearClickHandlers() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    for (const [key, handler] of this._clickHandlers) {\n      var _this$interactivity$e;\n      (_this$interactivity$e = this.interactivity.element) === null || _this$interactivity$e === void 0 || _this$interactivity$e.removeEventListener(key, handler);\n    }\n    this._clickHandlers.clear();\n  }\n  destroy() {\n    let remove = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.stop();\n    this.clearClickHandlers();\n    this.particles.destroy();\n    this.canvas.destroy();\n    for (const effectDrawer of this.effectDrawers.values()) {\n      var _effectDrawer$destroy;\n      (_effectDrawer$destroy = effectDrawer.destroy) === null || _effectDrawer$destroy === void 0 || _effectDrawer$destroy.call(effectDrawer, this);\n    }\n    for (const shapeDrawer of this.shapeDrawers.values()) {\n      var _shapeDrawer$destroy;\n      (_shapeDrawer$destroy = shapeDrawer.destroy) === null || _shapeDrawer$destroy === void 0 || _shapeDrawer$destroy.call(shapeDrawer, this);\n    }\n    for (const key of this.effectDrawers.keys()) {\n      this.effectDrawers.delete(key);\n    }\n    for (const key of this.shapeDrawers.keys()) {\n      this.shapeDrawers.delete(key);\n    }\n    this._engine.clearPlugins(this);\n    this.destroyed = true;\n    if (remove) {\n      const mainArr = this._engine.items,\n        idx = mainArr.findIndex(t => t === this);\n      if (idx >= removeMinIndex) {\n        mainArr.splice(idx, removeDeleteCount);\n      }\n    }\n    this._engine.dispatchEvent(EventType.containerDestroyed, {\n      container: this\n    });\n  }\n  draw(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    let refreshTime = force;\n    const frame = timestamp => {\n      if (refreshTime) {\n        this._lastFrameTime = undefined;\n        refreshTime = false;\n      }\n      this._nextFrame(timestamp);\n    };\n    this._drawAnimationFrame = animate(timestamp => frame(timestamp));\n  }\n  async export(type) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    for (const plugin of this.plugins.values()) {\n      if (!plugin.export) {\n        continue;\n      }\n      const res = await plugin.export(type, options);\n      if (!res.supported) {\n        continue;\n      }\n      return res.blob;\n    }\n    getLogger().error(\"\".concat(errorPrefix, \" - Export plugin with type \").concat(type, \" not found\"));\n  }\n  handleClickMode(mode) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.particles.handleClickMode(mode);\n    for (const plugin of this.plugins.values()) {\n      var _plugin$handleClickMo;\n      (_plugin$handleClickMo = plugin.handleClickMode) === null || _plugin$handleClickMo === void 0 || _plugin$handleClickMo.call(plugin, mode);\n    }\n  }\n  async init() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const effects = this._engine.getSupportedEffects();\n    for (const type of effects) {\n      const drawer = this._engine.getEffectDrawer(type);\n      if (drawer) {\n        this.effectDrawers.set(type, drawer);\n      }\n    }\n    const shapes = this._engine.getSupportedShapes();\n    for (const type of shapes) {\n      const drawer = this._engine.getShapeDrawer(type);\n      if (drawer) {\n        this.shapeDrawers.set(type, drawer);\n      }\n    }\n    await this.particles.initPlugins();\n    this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n    const availablePlugins = await this._engine.getAvailablePlugins(this);\n    for (const [id, plugin] of availablePlugins) {\n      this.plugins.set(id, plugin);\n    }\n    this.retina.init();\n    await this.canvas.init();\n    this.updateActualOptions();\n    this.canvas.initBackground();\n    this.canvas.resize();\n    const {\n      zLayers,\n      duration,\n      delay,\n      fpsLimit,\n      smooth\n    } = this.actualOptions;\n    this.zLayers = zLayers;\n    this._duration = getRangeValue(duration) * millisecondsToSeconds;\n    this._delay = getRangeValue(delay) * millisecondsToSeconds;\n    this._lifeTime = 0;\n    this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\n    this._smooth = smooth;\n    for (const drawer of this.effectDrawers.values()) {\n      var _drawer$init;\n      await ((_drawer$init = drawer.init) === null || _drawer$init === void 0 ? void 0 : _drawer$init.call(drawer, this));\n    }\n    for (const drawer of this.shapeDrawers.values()) {\n      var _drawer$init2;\n      await ((_drawer$init2 = drawer.init) === null || _drawer$init2 === void 0 ? void 0 : _drawer$init2.call(drawer, this));\n    }\n    for (const plugin of this.plugins.values()) {\n      var _plugin$init;\n      await ((_plugin$init = plugin.init) === null || _plugin$init === void 0 ? void 0 : _plugin$init.call(plugin));\n    }\n    this._engine.dispatchEvent(EventType.containerInit, {\n      container: this\n    });\n    await this.particles.init();\n    this.particles.setDensity();\n    for (const plugin of this.plugins.values()) {\n      var _plugin$particlesSetu;\n      (_plugin$particlesSetu = plugin.particlesSetup) === null || _plugin$particlesSetu === void 0 || _plugin$particlesSetu.call(plugin);\n    }\n    this._engine.dispatchEvent(EventType.particlesSetup, {\n      container: this\n    });\n  }\n  async loadTheme(name) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this._currentTheme = name;\n    await this.refresh();\n  }\n  pause() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    if (this._drawAnimationFrame !== undefined) {\n      cancelAnimation(this._drawAnimationFrame);\n      delete this._drawAnimationFrame;\n    }\n    if (this._paused) {\n      return;\n    }\n    for (const plugin of this.plugins.values()) {\n      var _plugin$pause;\n      (_plugin$pause = plugin.pause) === null || _plugin$pause === void 0 || _plugin$pause.call(plugin);\n    }\n    if (!this.pageHidden) {\n      this._paused = true;\n    }\n    this._engine.dispatchEvent(EventType.containerPaused, {\n      container: this\n    });\n  }\n  play(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const needsUpdate = this._paused || force;\n    if (this._firstStart && !this.actualOptions.autoPlay) {\n      this._firstStart = false;\n      return;\n    }\n    if (this._paused) {\n      this._paused = false;\n    }\n    if (needsUpdate) {\n      for (const plugin of this.plugins.values()) {\n        if (plugin.play) {\n          plugin.play();\n        }\n      }\n    }\n    this._engine.dispatchEvent(EventType.containerPlay, {\n      container: this\n    });\n    this.draw(needsUpdate !== null && needsUpdate !== void 0 ? needsUpdate : false);\n  }\n  async refresh() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.stop();\n    return this.start();\n  }\n  async reset(sourceOptions) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this._initialSourceOptions = sourceOptions;\n    this._sourceOptions = sourceOptions;\n    this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n    return this.refresh();\n  }\n  async start() {\n    if (!guardCheck(this) || this.started) {\n      return;\n    }\n    await this.init();\n    this.started = true;\n    await new Promise(resolve => {\n      const start = async () => {\n        this._eventListeners.addListeners();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n          this._intersectionObserver.observe(this.interactivity.element);\n        }\n        for (const plugin of this.plugins.values()) {\n          var _plugin$start;\n          await ((_plugin$start = plugin.start) === null || _plugin$start === void 0 ? void 0 : _plugin$start.call(plugin));\n        }\n        this._engine.dispatchEvent(EventType.containerStarted, {\n          container: this\n        });\n        this.play();\n        resolve();\n      };\n      this._delayTimeout = setTimeout(() => void start(), this._delay);\n    });\n  }\n  stop() {\n    if (!guardCheck(this) || !this.started) {\n      return;\n    }\n    if (this._delayTimeout) {\n      clearTimeout(this._delayTimeout);\n      delete this._delayTimeout;\n    }\n    this._firstStart = true;\n    this.started = false;\n    this._eventListeners.removeListeners();\n    this.pause();\n    this.particles.clear();\n    this.canvas.stop();\n    if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n      this._intersectionObserver.unobserve(this.interactivity.element);\n    }\n    for (const plugin of this.plugins.values()) {\n      var _plugin$stop;\n      (_plugin$stop = plugin.stop) === null || _plugin$stop === void 0 || _plugin$stop.call(plugin);\n    }\n    for (const key of this.plugins.keys()) {\n      this.plugins.delete(key);\n    }\n    this._sourceOptions = this._options;\n    this._engine.dispatchEvent(EventType.containerStopped, {\n      container: this\n    });\n  }\n  updateActualOptions() {\n    this.actualOptions.responsive = [];\n    const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n    this.actualOptions.setTheme(this._currentTheme);\n    if (this._responsiveMaxWidth === newMaxWidth) {\n      return false;\n    }\n    this._responsiveMaxWidth = newMaxWidth;\n    return true;\n  }\n}","map":{"version":3,"names":["animate","cancelAnimation","getRangeValue","clickRadius","defaultFps","defaultFpsLimit","errorPrefix","millisecondsToSeconds","minCoordinate","minFpsLimit","removeDeleteCount","removeMinIndex","touchEndLengthOffset","getLogger","safeIntersectionObserver","Canvas","EventListeners","EventType","Options","Particles","Retina","loadOptions","guardCheck","container","destroyed","initDelta","value","fpsLimit","arguments","length","undefined","smooth","factor","loadContainerOptions","engine","options","_len","sourceOptionsArr","Array","_key","Container","constructor","id","sourceOptions","_intersectionManager","entries","actualOptions","pauseOnOutsideViewport","entry","target","interactivity","element","isIntersecting","play","pause","_nextFrame","timestamp","_this$_lastFrameTime","_smooth","_lastFrameTime","draw","delta","addLifeTime","particles","alive","destroy","animationStatus","e","error","concat","_engine","Symbol","_delay","_duration","_lifeTime","_firstStart","started","_paused","zLayers","pageHidden","_clickHandlers","Map","_sourceOptions","_initialSourceOptions","retina","canvas","pathGenerators","mouse","clicking","inside","plugins","effectDrawers","shapeDrawers","_options","_eventListeners","_intersectionObserver","dispatchEvent","containerBuilt","addClickHandler","callback","el","clickOrTouchHandler","pos","radius","pxRatio","pixelRatio","posRetina","x","y","quadTree","queryCircle","clickHandler","mouseEvent","offsetX","clientX","offsetY","clientY","touchStartHandler","touched","touchMoved","touchMoveHandler","touchEndHandler","touchEvent","lastTouch","touches","changedTouches","canvasRect","getBoundingClientRect","left","top","Math","max","radiusX","radiusY","touchCancelHandler","set","key","handler","addEventListener","addPath","generator","override","has","clearClickHandlers","_this$interactivity$e","removeEventListener","clear","remove","stop","effectDrawer","values","_effectDrawer$destroy","call","shapeDrawer","_shapeDrawer$destroy","keys","delete","clearPlugins","mainArr","items","idx","findIndex","t","splice","containerDestroyed","force","refreshTime","frame","_drawAnimationFrame","export","type","plugin","res","supported","blob","handleClickMode","mode","_plugin$handleClickMo","init","effects","getSupportedEffects","drawer","getEffectDrawer","shapes","getSupportedShapes","getShapeDrawer","initPlugins","availablePlugins","getAvailablePlugins","updateActualOptions","initBackground","resize","duration","delay","_drawer$init","_drawer$init2","_plugin$init","containerInit","setDensity","_plugin$particlesSetu","particlesSetup","loadTheme","name","_currentTheme","refresh","_plugin$pause","containerPaused","needsUpdate","autoPlay","containerPlay","start","reset","Promise","resolve","addListeners","HTMLElement","observe","_plugin$start","containerStarted","_delayTimeout","setTimeout","clearTimeout","removeListeners","unobserve","_plugin$stop","containerStopped","responsive","newMaxWidth","setResponsive","size","width","setTheme","_responsiveMaxWidth"],"sources":["C:/Users/KIIT/portfolio/node_modules/@tsparticles/engine/browser/Core/Container.js"],"sourcesContent":["import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { clickRadius, defaultFps, defaultFpsLimit, errorPrefix, millisecondsToSeconds, minCoordinate, minFpsLimit, removeDeleteCount, removeMinIndex, touchEndLengthOffset, } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = entries => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._clickHandlers = new Map();\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this, this._engine);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n        this._engine.dispatchEvent(EventType.containerBuilt, { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        }, clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, clickRadius);\n        }, touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        }, touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        }, touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - touchEndLengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - touchEndLengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        }, touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        this._clickHandlers.set(\"click\", clickHandler);\n        this._clickHandlers.set(\"touchstart\", touchStartHandler);\n        this._clickHandlers.set(\"touchmove\", touchMoveHandler);\n        this._clickHandlers.set(\"touchend\", touchEndHandler);\n        this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\n        for (const [key, handler] of this._clickHandlers) {\n            el.addEventListener(key, handler);\n        }\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    clearClickHandlers() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        for (const [key, handler] of this._clickHandlers) {\n            this.interactivity.element?.removeEventListener(key, handler);\n        }\n        this._clickHandlers.clear();\n    }\n    destroy(remove = true) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.clearClickHandlers();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const effectDrawer of this.effectDrawers.values()) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const shapeDrawer of this.shapeDrawers.values()) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        if (remove) {\n            const mainArr = this._engine.items, idx = mainArr.findIndex(t => t === this);\n            if (idx >= removeMinIndex) {\n                mainArr.splice(idx, removeDeleteCount);\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerDestroyed, { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = animate(timestamp => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const plugin of this.plugins.values()) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const plugin of this.plugins.values()) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        const { zLayers, duration, delay, fpsLimit, smooth } = this.actualOptions;\n        this.zLayers = zLayers;\n        this._duration = getRangeValue(duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\n        this._smooth = smooth;\n        for (const drawer of this.effectDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const drawer of this.shapeDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const plugin of this.plugins.values()) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(EventType.containerInit, { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const plugin of this.plugins.values()) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(EventType.particlesSetup, { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(EventType.containerPaused, { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const plugin of this.plugins.values()) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerPlay, { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset(sourceOptions) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = sourceOptions;\n        this._sourceOptions = sourceOptions;\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise(resolve => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const plugin of this.plugins.values()) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(EventType.containerStarted, { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(EventType.containerStopped, { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}