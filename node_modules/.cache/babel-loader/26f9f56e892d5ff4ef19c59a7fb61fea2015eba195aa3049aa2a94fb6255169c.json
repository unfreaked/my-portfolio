{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"C:/Users/KIIT/portfolio/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mergeSlotProps;\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n// Brought from [Base UI](https://github.com/mui/base-ui/blob/master/packages/react/src/merge-props/mergeProps.ts#L119)\n// Use it directly from Base UI once it's a package dependency.\nfunction isEventHandler(key, value) {\n  // This approach is more efficient than using a regex.\n  const thirdCharCode = key.charCodeAt(2);\n  return key[0] === 'o' && key[1] === 'n' && thirdCharCode >= 65 /* A */ && thirdCharCode <= 90 /* Z */ && typeof value === 'function';\n}\nfunction mergeSlotProps(externalSlotProps, defaultSlotProps) {\n  if (!externalSlotProps) {\n    return defaultSlotProps;\n  }\n  function extractHandlers(externalSlotPropsValue, defaultSlotPropsValue) {\n    const handlers = {};\n    Object.keys(defaultSlotPropsValue).forEach(key => {\n      if (isEventHandler(key, defaultSlotPropsValue[key]) && typeof externalSlotPropsValue[key] === 'function') {\n        // only compose the handlers if both default and external slot props match the event handler\n        handlers[key] = function () {\n          externalSlotPropsValue[key](...arguments);\n          defaultSlotPropsValue[key](...arguments);\n        };\n      }\n    });\n    return handlers;\n  }\n  if (typeof externalSlotProps === 'function' || typeof defaultSlotProps === 'function') {\n    return ownerState => {\n      const defaultSlotPropsValue = typeof defaultSlotProps === 'function' ? defaultSlotProps(ownerState) : defaultSlotProps;\n      const externalSlotPropsValue = typeof externalSlotProps === 'function' ? externalSlotProps(_objectSpread(_objectSpread({}, ownerState), defaultSlotPropsValue)) : externalSlotProps;\n      const className = (0, _clsx.default)(ownerState === null || ownerState === void 0 ? void 0 : ownerState.className, defaultSlotPropsValue === null || defaultSlotPropsValue === void 0 ? void 0 : defaultSlotPropsValue.className, externalSlotPropsValue === null || externalSlotPropsValue === void 0 ? void 0 : externalSlotPropsValue.className);\n      const handlers = extractHandlers(externalSlotPropsValue, defaultSlotPropsValue);\n      return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, defaultSlotPropsValue), externalSlotPropsValue), handlers), !!className && {\n        className\n      }), (defaultSlotPropsValue === null || defaultSlotPropsValue === void 0 ? void 0 : defaultSlotPropsValue.style) && (externalSlotPropsValue === null || externalSlotPropsValue === void 0 ? void 0 : externalSlotPropsValue.style) && {\n        style: _objectSpread(_objectSpread({}, defaultSlotPropsValue.style), externalSlotPropsValue.style)\n      }), (defaultSlotPropsValue === null || defaultSlotPropsValue === void 0 ? void 0 : defaultSlotPropsValue.sx) && (externalSlotPropsValue === null || externalSlotPropsValue === void 0 ? void 0 : externalSlotPropsValue.sx) && {\n        sx: [...(Array.isArray(defaultSlotPropsValue.sx) ? defaultSlotPropsValue.sx : [defaultSlotPropsValue.sx]), ...(Array.isArray(externalSlotPropsValue.sx) ? externalSlotPropsValue.sx : [externalSlotPropsValue.sx])]\n      });\n    };\n  }\n  const typedDefaultSlotProps = defaultSlotProps;\n  const handlers = extractHandlers(externalSlotProps, typedDefaultSlotProps);\n  const className = (0, _clsx.default)(typedDefaultSlotProps === null || typedDefaultSlotProps === void 0 ? void 0 : typedDefaultSlotProps.className, externalSlotProps === null || externalSlotProps === void 0 ? void 0 : externalSlotProps.className);\n  return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, defaultSlotProps), externalSlotProps), handlers), !!className && {\n    className\n  }), (typedDefaultSlotProps === null || typedDefaultSlotProps === void 0 ? void 0 : typedDefaultSlotProps.style) && (externalSlotProps === null || externalSlotProps === void 0 ? void 0 : externalSlotProps.style) && {\n    style: _objectSpread(_objectSpread({}, typedDefaultSlotProps.style), externalSlotProps.style)\n  }), (typedDefaultSlotProps === null || typedDefaultSlotProps === void 0 ? void 0 : typedDefaultSlotProps.sx) && (externalSlotProps === null || externalSlotProps === void 0 ? void 0 : externalSlotProps.sx) && {\n    sx: [...(Array.isArray(typedDefaultSlotProps.sx) ? typedDefaultSlotProps.sx : [typedDefaultSlotProps.sx]), ...(Array.isArray(externalSlotProps.sx) ? externalSlotProps.sx : [externalSlotProps.sx])]\n  });\n}","map":{"version":3,"names":["_objectSpread","require","default","_interopRequireDefault","Object","defineProperty","exports","value","mergeSlotProps","_clsx","isEventHandler","key","thirdCharCode","charCodeAt","externalSlotProps","defaultSlotProps","extractHandlers","externalSlotPropsValue","defaultSlotPropsValue","handlers","keys","forEach","arguments","ownerState","className","style","sx","Array","isArray","typedDefaultSlotProps"],"sources":["C:/Users/KIIT/portfolio/node_modules/@mui/material/utils/mergeSlotProps.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mergeSlotProps;\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n// Brought from [Base UI](https://github.com/mui/base-ui/blob/master/packages/react/src/merge-props/mergeProps.ts#L119)\n// Use it directly from Base UI once it's a package dependency.\nfunction isEventHandler(key, value) {\n  // This approach is more efficient than using a regex.\n  const thirdCharCode = key.charCodeAt(2);\n  return key[0] === 'o' && key[1] === 'n' && thirdCharCode >= 65 /* A */ && thirdCharCode <= 90 /* Z */ && typeof value === 'function';\n}\nfunction mergeSlotProps(externalSlotProps, defaultSlotProps) {\n  if (!externalSlotProps) {\n    return defaultSlotProps;\n  }\n  function extractHandlers(externalSlotPropsValue, defaultSlotPropsValue) {\n    const handlers = {};\n    Object.keys(defaultSlotPropsValue).forEach(key => {\n      if (isEventHandler(key, defaultSlotPropsValue[key]) && typeof externalSlotPropsValue[key] === 'function') {\n        // only compose the handlers if both default and external slot props match the event handler\n        handlers[key] = (...args) => {\n          externalSlotPropsValue[key](...args);\n          defaultSlotPropsValue[key](...args);\n        };\n      }\n    });\n    return handlers;\n  }\n  if (typeof externalSlotProps === 'function' || typeof defaultSlotProps === 'function') {\n    return ownerState => {\n      const defaultSlotPropsValue = typeof defaultSlotProps === 'function' ? defaultSlotProps(ownerState) : defaultSlotProps;\n      const externalSlotPropsValue = typeof externalSlotProps === 'function' ? externalSlotProps({\n        ...ownerState,\n        ...defaultSlotPropsValue\n      }) : externalSlotProps;\n      const className = (0, _clsx.default)(ownerState?.className, defaultSlotPropsValue?.className, externalSlotPropsValue?.className);\n      const handlers = extractHandlers(externalSlotPropsValue, defaultSlotPropsValue);\n      return {\n        ...defaultSlotPropsValue,\n        ...externalSlotPropsValue,\n        ...handlers,\n        ...(!!className && {\n          className\n        }),\n        ...(defaultSlotPropsValue?.style && externalSlotPropsValue?.style && {\n          style: {\n            ...defaultSlotPropsValue.style,\n            ...externalSlotPropsValue.style\n          }\n        }),\n        ...(defaultSlotPropsValue?.sx && externalSlotPropsValue?.sx && {\n          sx: [...(Array.isArray(defaultSlotPropsValue.sx) ? defaultSlotPropsValue.sx : [defaultSlotPropsValue.sx]), ...(Array.isArray(externalSlotPropsValue.sx) ? externalSlotPropsValue.sx : [externalSlotPropsValue.sx])]\n        })\n      };\n    };\n  }\n  const typedDefaultSlotProps = defaultSlotProps;\n  const handlers = extractHandlers(externalSlotProps, typedDefaultSlotProps);\n  const className = (0, _clsx.default)(typedDefaultSlotProps?.className, externalSlotProps?.className);\n  return {\n    ...defaultSlotProps,\n    ...externalSlotProps,\n    ...handlers,\n    ...(!!className && {\n      className\n    }),\n    ...(typedDefaultSlotProps?.style && externalSlotProps?.style && {\n      style: {\n        ...typedDefaultSlotProps.style,\n        ...externalSlotProps.style\n      }\n    }),\n    ...(typedDefaultSlotProps?.sx && externalSlotProps?.sx && {\n      sx: [...(Array.isArray(typedDefaultSlotProps.sx) ? typedDefaultSlotProps.sx : [typedDefaultSlotProps.sx]), ...(Array.isArray(externalSlotProps.sx) ? externalSlotProps.sx : [externalSlotProps.sx])]\n    })\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}